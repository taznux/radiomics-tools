language: cpp
sudo: required
dist: trusty
addons:
  apt:
    packages:
    - cmake
    - libboost-dev
    - python3
    - python3-pip
    - python3-yaml
    - lcov
matrix:
  include:
  - os: osx
    compiler: clang
    env: ITK_VERSION=v4.13.0 TRAVIS_PYTHON_VERSION=3.6
  - os: linux
    compiler: gcc
    env: ITK_VERSION=v4.13.0 TRAVIS_PYTHON_VERSION=3.6
cache:
- directories:
  - $HOME/itk-v4.13.0
  - $HOME/itk-v4.13.0-build
before_install:
- if test $TRAVIS_OS_NAME == osx ; then brew update; brew install python3 lcov; brew
  upgrade libpng; fi
before_script:
- export NUM_THREADS=4
- export ITK_SOURCE_DIR=$HOME/itk-${ITK_VERSION}
- export ITK_BUILD_DIR=${ITK_SOURCE_DIR}-build
- if ! test -e ${ITK_SOURCE_DIR}/CMakeLists.txt; then rm -fr $ITK_SOURCE_DIR; fi
- if ! test -d ${ITK_SOURCE_DIR}; then git clone --branch ${ITK_VERSION} git://itk.org/ITK.git
  ${ITK_SOURCE_DIR}; fi
- if ! test -d ${ITK_BUILD_DIR}; then mkdir ${ITK_BUILD_DIR}; fi
- cd ${ITK_BUILD_DIR}
- cmake ${ITK_SOURCE_DIR} -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF
  -DModule_ITKReview=ON
- make --jobs=$NUM_THREADS --keep-going
- cd -
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    curl "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" -o miniconda_install.sh;
  elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    curl "https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -o miniconda_Install.sh;
  fi
- bash miniconda_install.sh -b -f -p "$HOME/miniconda/"
- export PATH="$HOME/miniconda/bin:$PATH"
- hash -r
- conda config --set always_yes yes --set changeps1 no
- conda update -q conda
# Useful for debugging any issues with conda
- conda info -a
- conda install --yes python=$TRAVIS_PYTHON_VERSION pandas scipy numpy ipython matplotlib
- conda install --yes -c bioconda ruffus
- conda install --yes -c SimpleITK SimpleITK
- python3 -m pip install codecov
- cd externals/TCIAExplorer
- python3 setup.py install
- cd -
- python3 setup.py install
- #python3 script/download_lungx_tcia.py
script:
- if ! test -d build; then mkdir build; fi
- cd build
- cmake .. -DENABLE_COVERAGE=On -DITK_DIR=${ITK_BUILD_DIR} && make && make test && cd - && cd build
#- cmake .. -DENABLE_COVERAGE=On -DITK_DIR=${ITK_BUILD_DIR} && make && make test && cd - && coverage run script/run_lungx.py && cd build
- make gcov
- make lcov
- cd -
after_success:
- codecov

notifications:
  slack:
    secure: 1omnZ9jQHn0IfraFNGqzdKu0pZqVLX/Wnt7DTLVMimdZNQHZYhnbDMJz6E5jiB190dGp0BKOXfbbhAqzpBO1upnZhGelZG9vMnRTiBH/7T9mjTCnQzSdTNPxdjopdED8Xbllhi43NIrfooXfz+3AuLTk6w5ox07oWPUQj8plbTl04bCwQha2H7CnpXS6unZ8xroNf3Vve6vFv3TxlwF6Q3ZWkgP60FqbTgWytKMb82sQ1+UjNGE/dxdqs4SPNmqNZgmaoi34NjjKmh23yuT1O6TaPsXE//U3yJd++t7l3vVTW2trYm718Bldh682ebDrMGS4+mH6vPIeQggJfubdu8V8p9Y5amh2hvsWfQ2bCnW2USgpAVgdyG/c5HHUvPmde3LuuUTUGlJsqAkyvBNVtqsz2ivKkkcm3FYOmpewa4RdNQ4RCzuzuFmop+nZYB5ZNwiQCn76RxtpvZoNvovNw6swc48Au36D/KdGnHjV975qlgaJDJaakGaEHgNkX6M6zS7rdD65Lun6lfeQ2mMciWXys7sxKkP+k4O/pNQaQzkNeFG9VYVe1w+Iymwnia5ltH9LttfZXi8UXkPaBDmUCtnMHFEImQGab1WHrUNmQ1hgXhNBgCtFNj+T+QPE/qqehlJ9xt+g6itJWIHZLd5hYTXXV3eGEMqUr3kxl+045mE=
